{"version":3,"sources":["parser.js","testimonial.js","testimonialSlide.js"],"names":["Parser","$nodeList","this","dataList","prototype","parse","i","length","$node","$","data","parseNode","push","$authorNode","children","author","parseAuthorNode","$companyNode","company","parseCompanyNode","quote","text","trim","$nameNode","name","url","getAttrHrefOrDefault","avatar","attr","href","undefined","Testimonial","$container","options","initPlugin","start","self","timerId","setInterval","next","pluginOptions","timeout","stop","clearInterval","cleanSlideList","currentSlide","$slideList","currentSlideIndex","indexing","nextSlide","animateHide","animateShow","resizePluginContainer","slideCount","loadSlide","add","slideObj","createAndAddSlide","slide","slideRendering","getSlide","whetherToRemoveSlide","index","removeSlide","res","remove","a","splice","getSlideCount","setSlideCount","value","createOptions","defaultOptions","getDefaultOptions","extend","width","height","autostart","indents","minWidth","slideListRendering","isShow","parseDomTree","$nodeArr","parser","createSlides","TestimonialSlide","createInfrastructure","$slideListWrapper","class","append","createButtonNext","$buttonNext","click","slideHeight","hideSlide","getDomNode","setHeightForBlockDiv","configContainer","initSlideList","createData","createSlide","emptydata","resultData","duration","distance","cssClass","$domNode","find","createStandardDomNode","createContentNode","className","createDivWithClass","createMainNode","createAvatarNode","createQuoteNode","createSignatureNode","$blockNode","$helperNode","createImgAuthorFoto","$quoteNode","createTextNode","p","$text","leftMark","leftImg","src","rightMark","rightImg","$div","$signatureNode","createAuthorNode","createCompanyNode","$link","createLinkNode","$linkNode","target","$authorFoto","animate","margin-left","opacity","show","css","display","empty"],"mappings":"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","file":"testimonial.min.map.js","sourcesContent":["'use strict';\n\nvar Parser = function($nodeList) {\n  this.$nodeList = $nodeList;\n  this.dataList = [];\n};\n\nParser.prototype = {\n  parse: function() {\n    for (var i = 0; i < this.$nodeList.length; i++) {\n      var $node = $(this.$nodeList[i]);\n      var data = this.parseNode($node);\n      this.dataList.push(data);\n    }\n\n    return this.dataList;\n  },\n\n  parseNode: function($node) {\n    var data = {};\n\n    var $authorNode = $node.children('.author');\n    data.author = this.parseAuthorNode($authorNode);\n\n    var $companyNode = $node.children('.company');\n    data.company = this.parseCompanyNode($companyNode);\n\n    data.quote = $node.children('.quote').text().trim();\n    return data;\n  },\n\n  parseAuthorNode: function($node) {\n    var $nameNode = $node.children('a');\n    var name = $nameNode.text().trim();\n    var url = this.getAttrHrefOrDefault($nameNode);\n    var avatar = $node.children('.avatar').attr('src');\n\n    var author = {\n      name: name,\n      url: url,\n      avatar: avatar\n    };\n\n    return author;\n  },\n\n  parseCompanyNode: function($node) {\n    var $companyNode = $node.children('a');\n    var name = $companyNode.text().trim();\n    var url = this.getAttrHrefOrDefault($companyNode);\n\n    var company = {\n      name: name,\n      url: url\n    };\n\n    return company;\n  },\n\n  getAttrHrefOrDefault: function($node) {\n    var href = $node.attr('href');\n    if (href === undefined) {\n      href = '#';\n    }\n    return href;\n  },\n};\n","'use strict';\n\nvar Testimonial = function($container, options) {\n  this.$container = $container;\n\n  this.initPlugin(options);\n};\n\nTestimonial.prototype = {\n  start: function() {\n    var self = this;\n    this.timerId = setInterval(function() {\n        self.next();\n      },\n      this.pluginOptions.timeout);\n  },\n\n  stop: function() {\n    clearInterval(this.timerId);\n    this.timerId = undefined;\n  },\n\n  next: function() {\n    if (this.timerId !== undefined) {\n      this.stop();\n    }\n\n    this.cleanSlideList();\n\n    var currentSlide = this.$slideList[this.currentSlideIndex];\n    this.indexing();\n    var nextSlide = this.$slideList[this.currentSlideIndex];\n\n    currentSlide.animateHide();\n    nextSlide.animateShow();\n    this.resizePluginContainer();\n\n    if (this.currentSlideIndex <= this.pluginOptions.slideCount - 1) {\n      this.loadSlide();\n    }\n\n    this.start();\n  },\n\n  add: function(slideObj) {\n    this.createAndAddSlide(slideObj);\n\n    var slide = this.$slideList[this.$slideList.length - 1];\n    this.slideRendering(slide, false);\n  },\n\n  loadSlide: function() {\n    if (this.getSlide && typeof this.getSlide === 'function') {\n      var slide = this.getSlide();\n      this.add(slide);\n      return;\n    }\n  },\n\n  cleanSlideList: function() {\n    if (this.whetherToRemoveSlide()) {\n      var index = 1;\n      if (this.currentSlideIndex !== 0) {\n        index = 0;\n        this.currentSlideIndex--;\n      }\n\n      this.removeSlide(index);\n    }\n  },\n\n  whetherToRemoveSlide: function() {\n    var res = this.$slideList.length > this.pluginOptions.slideCount;\n    return res;\n  },\n\n  removeSlide: function(index) {\n    this.$slideList[index].remove();\n    var a = this.$slideList.splice(index, 1);\n    delete a[0];\n  },\n\n  getSlideCount: function() {\n    return this.pluginOptions.slideCount;\n  },\n\n  setSlideCount: function(value) {\n    this.pluginOptions.slideCount = value;\n\n    while (this.whetherToRemoveSlide() === true) {\n      this.cleanSlideList();\n    }\n  },\n\n  createOptions: function(options) {\n    var defaultOptions = this.getDefaultOptions();\n    this.pluginOptions = $.extend(defaultOptions, options);\n    if (this.pluginOptions.width < 400) {\n      this.pluginOptions.width = 400;\n    }\n  },\n\n  getDefaultOptions: function() {\n    var defaultOptions = {\n      height: 175,\n      width: 700,\n      slideCount: 3,\n      timeout: 7000,\n      autostart: true,\n      indents: 20,\n      minWidth: 400\n    };\n    return defaultOptions;\n  },\n\n  slideListRendering: function() {\n    for (var i = 0; i < this.$slideList.length; i++) {\n      var slide = this.$slideList[i];\n      var isShow = i === this.currentSlideIndex;\n      this.slideRendering(slide, isShow);\n    }\n  },\n\n  parseDomTree: function() {\n    var $nodeArr = this.$container.children();\n    if ($nodeArr.length <= 0) {\n      return;\n    }\n    $nodeArr.remove();\n    /* global Parser: false */\n    var parser = new Parser($nodeArr);\n    this.dataList = parser.parse();\n  },\n\n  createSlides: function() {\n    for (var i = 0; i < this.dataList.length; i++) {\n      var data = this.dataList[i];\n      this.createAndAddSlide(data);\n    }\n  },\n\n  createAndAddSlide: function(data) {\n    var options = {\n      width: this.pluginOptions.width\n    };\n    /* global TestimonialSlide: false */\n    var slide = new TestimonialSlide(data, options);\n    this.$slideList.push(slide);\n  },\n\n  createInfrastructure: function() {\n    var indents = 500;\n    this.$slideListWrapper = $('<div />', {\n      'class': 'main_container'\n    });\n    var width = this.pluginOptions.width * 2 + indents;\n    this.$slideListWrapper.width(width);\n    this.$container.append(this.$slideListWrapper);\n    this.createButtonNext();\n  },\n\n  createButtonNext: function() {\n    var $buttonNext = $('<div />', {\n      'class': 'next_slide'\n    });\n    var self = this;\n    $buttonNext.click(function() {\n      self.next();\n    });\n    this.$container.append($buttonNext);\n  },\n\n  resizePluginContainer: function() {\n    if (this.$slideList.length <= 0) {\n      return;\n    }\n    var indents = 20;\n    var slideHeight = this.$slideList[this.currentSlideIndex].height();\n\n    this.$container.height(slideHeight + indents);\n  },\n\n  indexing: function() {\n    if (this.$slideList.length === 0) {\n      this.currentSlideIndex = 0;\n      return;\n    }\n\n    this.currentSlideIndex++;\n    if (this.currentSlideIndex === this.$slideList.length) {\n      this.currentSlideIndex = 0;\n    }\n  },\n\n  slideRendering: function(slide, isShow) {\n    if (!isShow) {\n      slide.hideSlide();\n    }\n    var $node = slide.getDomNode();\n    this.$slideListWrapper.append($node);\n    slide.setHeightForBlockDiv();\n  },\n\n  configContainer: function() {\n    this.$container.height(this.pluginOptions.height);\n    this.$container.width(this.pluginOptions.width);\n  },\n\n  initSlideList: function() {\n    this.configContainer();\n    this.parseDomTree();\n    this.createSlides();\n    this.createInfrastructure();\n    this.slideListRendering();\n    this.resizePluginContainer();\n  },\n\n  initPlugin: function(options) {\n    this.$slideList = [];\n    this.dataList = [];\n    this.currentSlideIndex = 0;\n    this.getSlide = null;\n\n    this.createOptions(options);\n    this.initSlideList();\n\n    if (this.pluginOptions.autostart) {\n      this.start();\n    }\n  }\n};\n","'use strict';\n\nvar TestimonialSlide = function(data, options) {\n  this.data = this.createData(data);\n\n  this.createOptions(options);\n  this.createSlide();\n};\n\nTestimonialSlide.prototype = {\n  createData: function(data) {\n    var emptydata = {\n      author: {\n        name: '',\n        url: '',\n        avatar: ''\n      },\n      company: {\n        name: '',\n        url: ''\n      },\n      quote: ''\n    };\n    var resultData = $.extend(emptydata, data);\n    return resultData;\n  },\n\n  createOptions: function(options) {\n    var defaultOptions = this.getDefaultOptions();\n    this.options = $.extend({}, defaultOptions, options);\n  },\n\n  getDefaultOptions: function() {\n    var defaultOptions = {\n      width: 700,\n      duration: 750,\n      distance: 250,\n      cssClass: 'testimonial_slide',\n      indents: 20\n    };\n    return defaultOptions;\n  },\n\n  setHeightForBlockDiv: function() {\n    var height = this.$domNode.height();\n    this.$domNode.find('.block').height(height);\n  },\n\n  createSlide: function() {\n    this.createStandardDomNode();\n    this.$domNode.append(this.createContentNode());\n  },\n\n  createContentNode: function() {\n    var className = 'content';\n    var $node = this.createDivWithClass(className);\n\n    $node.append(this.createMainNode());\n    $node.append(this.createAvatarNode());\n    return $node;\n  },\n\n  createMainNode: function() {\n    var className = 'main';\n    var $node = this.createDivWithClass(className);\n\n    var width = this.options.width - 20 - 160;\n    $node.width(width);\n    $node.append(this.createQuoteNode());\n    $node.append(this.createSignatureNode());\n\n    return $node;\n  },\n\n  createAvatarNode: function() {\n    var className = 'author';\n    var $authorNode = this.createDivWithClass(className);\n\n    className = 'block';\n    var $blockNode = this.createDivWithClass(className);\n\n    className = 'avatar';\n    var $node = this.createDivWithClass(className);\n\n    className = 'helper';\n    var $helperNode = this.createDivWithClass(className);\n\n    $authorNode.append(this.createImgAuthorFoto());\n    $blockNode.append($authorNode);\n    $blockNode.append($helperNode);\n    $node.append($blockNode);\n\n    return $node;\n  },\n\n  createStandardDomNode: function() {\n    this.$domNode = this.createDivWithClass(this.options.cssClass);\n    var width = this.options.width - this.options.indents;\n    this.$domNode.width(width);\n  },\n\n  createQuoteNode: function() {\n    var className = 'quote';\n    var $quoteNode = this.createDivWithClass(className);\n\n    $quoteNode.append(this.createTextNode());\n    return $quoteNode;\n  },\n\n  createTextNode: function() {\n    var p = $('<p />');\n    p.text(this.data.quote);\n\n    var $text = this.createDivWithClass('text');\n\n    var leftMark = this.createDivWithClass('quotation_mark left');\n    var leftImg = $('<img />', {\n      src: 'dist/img/quotation_mark.png'\n    });\n    leftMark.append(leftImg);\n    var rightMark = this.createDivWithClass('quotation_mark right');\n    var rightImg = $('<img />', {\n      src: 'dist/img/quotation_mark_inverted.png'\n    });\n    rightMark.append(rightImg);\n\n    $text.append(leftMark);\n    $text.append(p);\n    $text.append(rightMark);\n\n    return $text;\n  },\n\n  createDivWithClass: function(className) {\n    var $div = $('<div />', {\n      'class': className\n    });\n    return $div;\n  },\n\n  createSignatureNode: function() {\n    var $signatureNode = this.createDivWithClass('signature');\n    $signatureNode.append(this.createAuthorNode());\n    $signatureNode.append(this.createCompanyNode());\n    return $signatureNode;\n  },\n\n  createAuthorNode: function() {\n    var $authorNode = this.createDivWithClass('author');\n    $authorNode.text('- ');\n    var $link = this.createLinkNode(this.data.author.url, this.data.author.name);\n    $authorNode.append($link);\n    return $authorNode;\n  },\n\n  createCompanyNode: function() {\n    var $companyNode = this.createDivWithClass('company');\n    var $link = this.createLinkNode(this.data.company.url, this.data.company.name);\n    $companyNode.append($link);\n    return $companyNode;\n  },\n\n  createLinkNode: function(href, text) {\n    var $linkNode = $('<a />', {\n      target: '_blank',\n      href: href,\n      text: text\n    });\n    return $linkNode;\n  },\n\n  createImgAuthorFoto: function() {\n    var $authorFoto = $('<img />', {\n      'src': this.data.author.avatar\n    });\n    return $authorFoto;\n  },\n\n  animateHide: function() {\n    var self = this;\n\n    this.$domNode.animate({\n        'margin-left': '+=' + this.options.distance + 'px',\n        opacity: '0'\n      },\n      this.options.duration,\n      function() {\n        self.hideSlide();\n      }\n    );\n  },\n\n  animateShow: function() {\n    this.$domNode.show().animate({\n        'margin-left': '+=' + this.options.distance + 'px',\n        opacity: '1'\n      },\n      this.options.duration * 2);\n  },\n\n  hideSlide: function() {\n    var css = {\n      display: 'none',\n      opacity: 0,\n      'margin-left': '-' + this.options.distance + 'px'\n    };\n    this.$domNode.css(css);\n  },\n\n  height: function() {\n    return this.$domNode.height();\n  },\n\n  getDomNode: function() {\n    return this.$domNode;\n  },\n\n  remove: function() {\n    this.$domNode.empty();\n    this.$domNode.remove();\n  }\n};\n"],"sourceRoot":"/source/"}